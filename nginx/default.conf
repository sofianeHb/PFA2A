upstream fastapi_backend {
    server fastapi:8000;
}

upstream mlflow_backend {
    server mlflow:5000;
}

upstream frontend_backend {
    server frontend:80;
}

server {
    listen 80;
    server_name localhost;

    # Proxy vers FastAPI pour les API calls
    location /api/ {
        proxy_pass http://fastapi_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration pour les uploads de fichiers
        client_max_body_size 100M;
        proxy_read_timeout 600s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 600s;
        
        # Headers additionnels pour les uploads
        proxy_set_header Content-Length $content_length;
        proxy_set_header Content-Type $content_type;
        
        # Pas de buffering pour les gros fichiers
        proxy_request_buffering off;
        proxy_buffering off;
        
        # Retirer le slash final pour éviter les problèmes de redirection
        rewrite ^/api/(.*)$ /$1 break;
    }

    # Route spécifique pour OpenAPI JSON et docs
    location /docs {
        proxy_pass http://fastapi_backend/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration pour Swagger UI
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    location /openapi.json {
        proxy_pass http://fastapi_backend/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Route pour les fichiers statiques de Swagger
    location /static/ {
        proxy_pass http://fastapi_backend/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy vers MLflow
    location /mlflow/ {
        proxy_pass http://mlflow_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        rewrite ^/mlflow/(.*)$ /$1 break;
    }

    # Servir le frontend React - doit être en dernier
    location / {
        proxy_pass http://frontend_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Gestion des erreurs
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}